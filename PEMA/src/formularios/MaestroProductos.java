/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import clases.Conexion;
import clases.ProductoPerecedero;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Roberto Mendoza
 */
public class MaestroProductos extends javax.swing.JInternalFrame {

    //Conexion a la base de datos
    Connection con = null;
    Conexion conexion = new Conexion();
    //Variable para ejectutar una consulta a la base de datos
    PreparedStatement ps;
    //Variable para almacenar el resultado de la consulta
    ResultSet res;
    //Definir el modelo para la Tabla que almacenara los datos del usuario
    DefaultTableModel tbModelo = new DefaultTableModel(new String[]{"ID Producto", "CÃ³digo de producto", "Nombre", "UM", "Tipo"}, 0);

    public MaestroProductos() {
        initComponents();
        //Relaizar conexion a BD
        con = conexion.getConexion();
        //Mostrar estado de conexion a bd
        lblEstadoConexion.setText(conexion.getEstadoConexion());
        //Desabilitar campos de datos para la creacion de usuario
        txtNombreProducto.setEditable(false);
        txtCodigoProducto.setEditable(false);
        txtIdProducto.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGuardarProducto = new javax.swing.JButton();
        lblNombrePoducto = new javax.swing.JLabel();
        lblCodigoProducto = new javax.swing.JLabel();
        lblUm = new javax.swing.JLabel();
        lblTipoProducto = new javax.swing.JLabel();
        txtNombreProducto = new javax.swing.JTextField();
        txtCodigoProducto = new javax.swing.JTextField();
        cbUm = new javax.swing.JComboBox<>();
        cbTipoProducto = new javax.swing.JComboBox<>();
        btnHabilitarCampos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbUsuarios = new javax.swing.JTable();
        lblEstado = new javax.swing.JLabel();
        lblEstadoConexion = new javax.swing.JLabel();
        btnMostrarProductos = new javax.swing.JButton();
        btnLimpiarTabla = new javax.swing.JButton();
        btnBuscarProducto = new javax.swing.JButton();
        btnActualizarProducto = new javax.swing.JButton();
        btnEliminarProducto = new javax.swing.JButton();
        txtIdProducto = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("Maestro de Productos");
        setToolTipText("");

        btnGuardarProducto.setText("Guardar nuevo producto");
        btnGuardarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarProductoActionPerformed(evt);
            }
        });

        lblNombrePoducto.setText("Nombre producto:");

        lblCodigoProducto.setText("Codigo de producto:");

        lblUm.setText("Unidad de medida:");

        lblTipoProducto.setText("Tipo de producto");

        cbUm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "UNIDAD", "KG", "LB", "CAJA" }));

        cbTipoProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Verdura", "Pan", "Carne" }));

        btnHabilitarCampos.setText("Habilitar campos");
        btnHabilitarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHabilitarCamposActionPerformed(evt);
            }
        });

        tbUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Producto", "Codigo producto", "Nombre", "UM", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbUsuarios);

        lblEstado.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        lblEstado.setText("Estado");

        lblEstadoConexion.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        lblEstadoConexion.setText("...");

        btnMostrarProductos.setText("Mostrar productos");
        btnMostrarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarProductosActionPerformed(evt);
            }
        });

        btnLimpiarTabla.setText("Limpiar tabla");
        btnLimpiarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarTablaActionPerformed(evt);
            }
        });

        btnBuscarProducto.setText("Buscar producto");
        btnBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProductoActionPerformed(evt);
            }
        });

        btnActualizarProducto.setText("Actualizar producto");
        btnActualizarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarProductoActionPerformed(evt);
            }
        });

        btnEliminarProducto.setText("Eliminar producto");
        btnEliminarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProductoActionPerformed(evt);
            }
        });

        txtIdProducto.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblEstadoConexion)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnBuscarProducto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHabilitarCampos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardarProducto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnActualizarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblNombrePoducto)
                        .addGap(25, 25, 25)
                        .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTipoProducto)
                            .addComponent(lblCodigoProducto)
                            .addComponent(lblUm))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbUm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbTipoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnMostrarProductos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnLimpiarTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE))
                            .addComponent(txtCodigoProducto))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnHabilitarCampos)
                            .addComponent(lblNombrePoducto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuardarProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBuscarProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnActualizarProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarProducto))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCodigoProducto)
                            .addComponent(txtCodigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbUm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUm)
                            .addComponent(btnMostrarProductos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbTipoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTipoProducto)
                            .addComponent(btnLimpiarTabla))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEstado)
                    .addComponent(lblEstadoConexion)))
        );

        getAccessibleContext().setAccessibleName("Maestro de Productos");
        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHabilitarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHabilitarCamposActionPerformed
        //Habilitar campos para la creacion de usuarios
        txtNombreProducto.setEditable(true);
        txtCodigoProducto.setEditable(true);
    }//GEN-LAST:event_btnHabilitarCamposActionPerformed

    private void btnGuardarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarProductoActionPerformed
        //Guardar datos de usuario
        //Validar campos vacÃ­os
        if ((txtNombreProducto.getText().isEmpty()) || (txtCodigoProducto.getText().isEmpty())) {
            JOptionPane.showMessageDialog(null, "Todos los campos son requeridos");
            //Desabilitar y limpiar campos
            txtNombreProducto.setEditable(false);
            txtCodigoProducto.setEditable(false);
            txtNombreProducto.setText(null);
            txtCodigoProducto.setText(null);
        } else {

            //Capturar los datos ingresados
            String cp = txtCodigoProducto.getText();
            String np = txtNombreProducto.getText();
            String um = (String) cbUm.getSelectedItem();
            String tp = (String) cbTipoProducto.getSelectedItem();

            //Instanciar producto para almacenar los datos
            ProductoPerecedero nuevoProducto = new ProductoPerecedero(cp, np, um, tp);

            try {
                ps = con.prepareStatement("INSERT INTO tb_productos(codigoProducto, nombre, um, tipo) VALUES(?,?,?,?)");
                ps.setString(1, nuevoProducto.getCodigoProducto());
                ps.setString(2, nuevoProducto.getNombre());
                ps.setString(3, nuevoProducto.getUm());
                ps.setString(4, nuevoProducto.getTipo());

                int res = ps.executeUpdate();
                //Si el resultado es = a 1 el registro fue exitoso, sino hubo error
                if (res == 1) {
                    JOptionPane.showMessageDialog(null, "Registro exitoso");
                } else {
                    JOptionPane.showMessageDialog(null, "Error al realizar registro");
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al ingresar datos a tabla " + ex);
            }
            //Desabilitar y limpiar campos
            txtNombreProducto.setEditable(false);
            txtCodigoProducto.setEditable(false);
            txtNombreProducto.setText(null);
            txtCodigoProducto.setText(null);
        }
    }//GEN-LAST:event_btnGuardarProductoActionPerformed

    private void btnMostrarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarProductosActionPerformed
        try {
            //Crear arreglo de clase string para mostrar temporalmente en tabla
            String[] producto = new String[5];
            //Seleccionar modelo de tabla
            tbUsuarios.setModel(tbModelo);
            ps = con.prepareStatement("SELECT * FROM tb_productos");
            //Ejecutar linea de codigo en MySQL
            res = ps.executeQuery();
            //Mientras fila por fila encuentre datos deberÃ¡ almacenar en un arreglo
            while (res.next()) {
                //Almacenar en arreglo los datos de la tabla de la BD
                producto[0] = Integer.toString(res.getInt("idProducto"));
                producto[1] = res.getString("codigoProducto");
                producto[2] = res.getString("nombre");
                producto[3] = res.getString("um");
                producto[4] = res.getString("tipo");
                //Agregar a tabla los datos recuperados de la BD
                tbModelo.addRow(producto);
            }
            //

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al consultar tabla " + ex);
        }
    }//GEN-LAST:event_btnMostrarProductosActionPerformed

    private void btnLimpiarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarTablaActionPerformed

        for (int i = 0; i < tbModelo.getRowCount(); i++) {
            tbModelo.removeRow(i);
            i -= 1;
        }

    }//GEN-LAST:event_btnLimpiarTablaActionPerformed

    private void btnBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProductoActionPerformed
        String busqueda;
        try {
            busqueda = JOptionPane.showInputDialog(null, "Ingrese codigo de producto a buscar: ");
            if (busqueda.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No debe dejar el campo vacÃ­o");
            } else {
                try {
                    ps = con.prepareStatement("SELECT * FROM tb_productos WHERE codigoProducto = ?");
                    ps.setString(1, busqueda);
                    res = ps.executeQuery();

                    if (res.next()) {
                        txtNombreProducto.setText(res.getString("nombre"));
                        cbUm.setSelectedItem(res.getString("um"));
                        cbTipoProducto.setSelectedItem(res.getString("tipo"));
                        txtCodigoProducto.setText(res.getString("codigoProducto"));
                        txtIdProducto.setText(res.getString("idProducto"));

                        //Habilitar campos
//                        txtNombreProducto.setEditable(true);
//                        txtCodigoProducto.setEditable(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "Producto no encontrado");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error al consultar tabla " + ex);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Consulta no ejecutada");
        }
    }//GEN-LAST:event_btnBuscarProductoActionPerformed

    private void btnActualizarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarProductoActionPerformed
        try {
            ps = con.prepareStatement("UPDATE tb_productos SET nombre=?,um=?,tipo=?,codigoProducto=? WHERE idProducto=?");

            ps.setString(1, txtNombreProducto.getText());
            ps.setString(2, cbUm.getSelectedItem().toString());
            ps.setString(3, cbTipoProducto.getSelectedItem().toString());
            ps.setString(4, txtCodigoProducto.getText());
            ps.setString(5, txtIdProducto.getText());

            int res = ps.executeUpdate();

            if (res == 1) {
                JOptionPane.showMessageDialog(null, "Registro actualizado con exito");
            } else {
                JOptionPane.showMessageDialog(null, "Error en actualizacion de registro");
            }

            //Desabilitar y limpiar campos
            txtNombreProducto.setEditable(false);
            txtCodigoProducto.setEditable(false);
            txtNombreProducto.setText(null);
            txtCodigoProducto.setText(null);
            txtIdProducto.setText(null);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al actualizar tabla " + ex);
        }
    }//GEN-LAST:event_btnActualizarProductoActionPerformed

    private void btnEliminarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProductoActionPerformed
        String busqueda;
        try {
            busqueda = JOptionPane.showInputDialog(null, "Ingrese codigo de producto a eliminar: ");
            if (busqueda.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No deje dejar el campo vacÃ­o");
            } else {
                try {
                    ps = con.prepareStatement("DELETE FROM tb_productos WHERE codigoProducto = ?");
                    ps.setString(1, busqueda);
                    int res;
                    res = ps.executeUpdate();

                    if (res == 1) {
                        JOptionPane.showMessageDialog(null, "Registro eliminado");
                        //Habilitar campos
//                        txtNombreProducto.setEditable(true);
//                        txtCodigoProducto.setEditable(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "Producto no encontrado");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error al consultar tabla " + ex);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Consulta no ejecutada");
        }
    }//GEN-LAST:event_btnEliminarProductoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarProducto;
    private javax.swing.JButton btnBuscarProducto;
    private javax.swing.JButton btnEliminarProducto;
    private javax.swing.JButton btnGuardarProducto;
    private javax.swing.JButton btnHabilitarCampos;
    private javax.swing.JButton btnLimpiarTabla;
    private javax.swing.JButton btnMostrarProductos;
    private javax.swing.JComboBox<String> cbTipoProducto;
    private javax.swing.JComboBox<String> cbUm;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCodigoProducto;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblEstadoConexion;
    private javax.swing.JLabel lblNombrePoducto;
    private javax.swing.JLabel lblTipoProducto;
    private javax.swing.JLabel lblUm;
    private javax.swing.JTable tbUsuarios;
    private javax.swing.JTextField txtCodigoProducto;
    private javax.swing.JTextField txtIdProducto;
    private javax.swing.JTextField txtNombreProducto;
    // End of variables declaration//GEN-END:variables
}
